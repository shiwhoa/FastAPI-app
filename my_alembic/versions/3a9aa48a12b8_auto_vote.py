"""auto-vote

Revision ID: 3a9aa48a12b8
Revises: 7c96241eb3dc
Create Date: 2023-01-16 21:18:21.856813

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3a9aa48a12b8'
down_revision = '7c96241eb3dc'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('votes',
    sa.Column('sql_alchemy_liked_by_user_id', sa.Integer(), nullable=False),
    sa.Column('sql_alchemy_liked_post_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['sql_alchemy_liked_by_user_id'], ['users.sql_alchemy_user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sql_alchemy_liked_post_id'], ['posts.sql_alchemy_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('sql_alchemy_liked_by_user_id', 'sql_alchemy_liked_post_id')
    )
    op.add_column('posts', sa.Column('sql_alchemy_id', sa.Integer(), nullable=False))
    op.add_column('posts', sa.Column('sql_alchemy_title', sa.String(), nullable=False))
    op.add_column('posts', sa.Column('sql_alchemy_content', sa.String(), nullable=False))
    op.add_column('posts', sa.Column('sql_alchemy_published', sa.Boolean(), server_default='True', nullable=False))
    op.add_column('posts', sa.Column('sql_alchemy_created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('posts', sa.Column('sql_alchemy_user_id', sa.Integer(), nullable=False))
    op.drop_constraint('posts_users_fk', 'posts', type_='foreignkey')
    op.create_foreign_key(None, 'posts', 'users', ['sql_alchemy_user_id'], ['sql_alchemy_user_id'], ondelete='CASCADE')
    op.drop_column('posts', 'alembic_title')
    op.drop_column('posts', 'alembic_user_id')
    op.drop_column('posts', 'alembic_published')
    op.drop_column('posts', 'alembic_created_at')
    op.drop_column('posts', 'alembic_id')
    op.drop_column('posts', 'alembic_content')
    op.add_column('users', sa.Column('sql_alchemy_user_id', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('sql_alchemy_user_email', sa.String(), nullable=False))
    op.add_column('users', sa.Column('sql_alchemy_user_password', sa.String(), nullable=False))
    op.add_column('users', sa.Column('sql_alchemy_created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.drop_constraint('users_alembic_user_email_key', 'users', type_='unique')
    op.create_unique_constraint(None, 'users', ['sql_alchemy_user_email'])
    op.drop_column('users', 'alembic_user_id')
    op.drop_column('users', 'alembic_user_password')
    op.drop_column('users', 'alembic_user_created_at')
    op.drop_column('users', 'alembic_user_email')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('alembic_user_email', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('alembic_user_created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('alembic_user_password', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('alembic_user_id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.create_unique_constraint('users_alembic_user_email_key', 'users', ['alembic_user_email'])
    op.drop_column('users', 'sql_alchemy_created_at')
    op.drop_column('users', 'sql_alchemy_user_password')
    op.drop_column('users', 'sql_alchemy_user_email')
    op.drop_column('users', 'sql_alchemy_user_id')
    op.add_column('posts', sa.Column('alembic_content', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('posts', sa.Column('alembic_id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.add_column('posts', sa.Column('alembic_created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('posts', sa.Column('alembic_published', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False))
    op.add_column('posts', sa.Column('alembic_user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('posts', sa.Column('alembic_title', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'posts', type_='foreignkey')
    op.create_foreign_key('posts_users_fk', 'posts', 'users', ['alembic_user_id'], ['alembic_user_id'], ondelete='CASCADE')
    op.drop_column('posts', 'sql_alchemy_user_id')
    op.drop_column('posts', 'sql_alchemy_created_at')
    op.drop_column('posts', 'sql_alchemy_published')
    op.drop_column('posts', 'sql_alchemy_content')
    op.drop_column('posts', 'sql_alchemy_title')
    op.drop_column('posts', 'sql_alchemy_id')
    op.drop_table('votes')
    # ### end Alembic commands ###
